def get_lines(filepath):
	file = open(filepath, 'r')
	lines = list()
	for line in file.readlines():
		if line.endswith('\r\n'):
			line = line[:-2]
		if line.endswith('\r'):
			line = line[:-1]
		if line.endswith('\n'):
			line = line[:-1]
		lines.append(line)
	return lines


def load_dataset(data_filepath, skip_records_with_empty_values=False):
	dataset = {
		'age': [],
		'sex': [],  # 0 <==> male, 1 <==> female
		'height': [],
		'weight': [],
		'qrs-duration': [],  # Average of QRS duration in milliseconds
		'pq-interval': [],  # Average duration between onset of P and Q waves in milliseconds
		'qt-interval': [],  # Average duration between onset of Q and offset of T waves in milliseconds
		't-interval': [],  # Average duration of T wave in milliseconds
		'p-interval': [],  # Average duration of P wave in milliseconds
		# Vector angles in degrees of front plane of:
		'qrs': [],
		't': [],
		'p': [],
		'qrst': [],
		'j': [],
		'heart-rate': [],  # Number of heart beats per minute
		# DI channel:
		'di-q-wave': [],
		'di-r-wave': [],
		'di-s-wave': [],
		'di-r\'-wave': [],
		'di-s\'-wave': [],
		'di-intrinsic-deflections-count': [],
		'di-existence-ragged-r-wave': [],
		'di-existence-diphasic-derivation-of-r-wave': [],
		'di-existence-ragged-p-wave': [],
		'di-existence-diphasic-derivation-of-p-wave': [],
		'di-existence-ragged-t-wave': [],
		'di-existence-diphasic-derivation-of-t-wave': [],
		# DII channel:
		'dii-q-wave': [],
		'dii-r-wave': [],
		'dii-s-wave': [],
		'dii-r\'-wave': [],
		'dii-s\'-wave': [],
		'dii-intrinsic-deflections-count': [],
		'dii-existence-ragged-r-wave': [],
		'dii-existence-diphasic-derivation-of-r-wave': [],
		'dii-existence-ragged-p-wave': [],
		'dii-existence-diphasic-derivation-of-p-wave': [],
		'dii-existence-ragged-t-wave': [],
		'dii-existence-diphasic-derivation-of-t-wave': [],
		# DIII channel:
		'diii-q-wave': [],
		'diii-r-wave': [],
		'diii-s-wave': [],
		'diii-r\'-wave': [],
		'diii-s\'-wave': [],
		'diii-intrinsic-deflections-count': [],
		'diii-existence-ragged-r-wave': [],
		'diii-existence-diphasic-derivation-of-r-wave': [],
		'diii-existence-ragged-p-wave': [],
		'diii-existence-diphasic-derivation-of-p-wave': [],
		'diii-existence-ragged-t-wave': [],
		'diii-existence-diphasic-derivation-of-t-wave': [],
		# AVR channel:
		'avr-q-wave': [],
		'avr-r-wave': [],
		'avr-s-wave': [],
		'avr-r\'-wave': [],
		'avr-s\'-wave': [],
		'avr-intrinsic-deflections-count': [],
		'avr-existence-ragged-r-wave': [],
		'avr-existence-diphasic-derivation-of-r-wave': [],
		'avr-existence-ragged-p-wave': [],
		'avr-existence-diphasic-derivation-of-p-wave': [],
		'avr-existence-ragged-t-wave': [],
		'avr-existence-diphasic-derivation-of-t-wave': [],
		# AVL channel:
		'avl-q-wave': [],
		'avl-r-wave': [],
		'avl-s-wave': [],
		'avl-r\'-wave': [],
		'avl-s\'-wave': [],
		'avl-intrinsic-deflections-count': [],
		'avl-existence-ragged-r-wave': [],
		'avl-existence-diphasic-derivation-of-r-wave': [],
		'avl-existence-ragged-p-wave': [],
		'avl-existence-diphasic-derivation-of-p-wave': [],
		'avl-existence-ragged-t-wave': [],
		'avl-existence-diphasic-derivation-of-t-wave': [],
		# AVF channel:
		'avf-q-wave': [],
		'avf-r-wave': [],
		'avf-s-wave': [],
		'avf-r\'-wave': [],
		'avf-s\'-wave': [],
		'avf-intrinsic-deflections-count': [],
		'avf-existence-ragged-r-wave': [],
		'avf-existence-diphasic-derivation-of-r-wave': [],
		'avf-existence-ragged-p-wave': [],
		'avf-existence-diphasic-derivation-of-p-wave': [],
		'avf-existence-ragged-t-wave': [],
		'avf-existence-diphasic-derivation-of-t-wave': [],
		# V1 channel:
		'v1-q-wave': [],
		'v1-r-wave': [],
		'v1-s-wave': [],
		'v1-r\'-wave': [],
		'v1-s\'-wave': [],
		'v1-intrinsic-deflections-count': [],
		'v1-existence-ragged-r-wave': [],
		'v1-existence-diphasic-derivation-of-r-wave': [],
		'v1-existence-ragged-p-wave': [],
		'v1-existence-diphasic-derivation-of-p-wave': [],
		'v1-existence-ragged-t-wave': [],
		'v1-existence-diphasic-derivation-of-t-wave': [],
		# V2 channel:
		'v2-q-wave': [],
		'v2-r-wave': [],
		'v2-s-wave': [],
		'v2-r\'-wave': [],
		'v2-s\'-wave': [],
		'v2-intrinsic-deflections-count': [],
		'v2-existence-ragged-r-wave': [],
		'v2-existence-diphasic-derivation-of-r-wave': [],
		'v2-existence-ragged-p-wave': [],
		'v2-existence-diphasic-derivation-of-p-wave': [],
		'v2-existence-ragged-t-wave': [],
		'v2-existence-diphasic-derivation-of-t-wave': [],
		# V3 channel:
		'v3-q-wave': [],
		'v3-r-wave': [],
		'v3-s-wave': [],
		'v3-r\'-wave': [],
		'v3-s\'-wave': [],
		'v3-intrinsic-deflections-count': [],
		'v3-existence-ragged-r-wave': [],
		'v3-existence-diphasic-derivation-of-r-wave': [],
		'v3-existence-ragged-p-wave': [],
		'v3-existence-diphasic-derivation-of-p-wave': [],
		'v3-existence-ragged-t-wave': [],
		'v3-existence-diphasic-derivation-of-t-wave': [],
		# V4 channel:
		'v4-q-wave': [],
		'v4-r-wave': [],
		'v4-s-wave': [],
		'v4-r\'-wave': [],
		'v4-s\'-wave': [],
		'v4-intrinsic-deflections-count': [],
		'v4-existence-ragged-r-wave': [],
		'v4-existence-diphasic-derivation-of-r-wave': [],
		'v4-existence-ragged-p-wave': [],
		'v4-existence-diphasic-derivation-of-p-wave': [],
		'v4-existence-ragged-t-wave': [],
		'v4-existence-diphasic-derivation-of-t-wave': [],
		# V5 channel:
		'v5-q-wave': [],
		'v5-r-wave': [],
		'v5-s-wave': [],
		'v5-r\'-wave': [],
		'v5-s\'-wave': [],
		'v5-intrinsic-deflections-count': [],
		'v5-existence-ragged-r-wave': [],
		'v5-existence-diphasic-derivation-of-r-wave': [],
		'v5-existence-ragged-p-wave': [],
		'v5-existence-diphasic-derivation-of-p-wave': [],
		'v5-existence-ragged-t-wave': [],
		'v5-existence-diphasic-derivation-of-t-wave': [],
		# V6 channel:
		'v6-q-wave': [],
		'v6-r-wave': [],
		'v6-s-wave': [],
		'v6-r\'-wave': [],
		'v6-s\'-wave': [],
		'v6-intrinsic-deflections-count': [],
		'v6-existence-ragged-r-wave': [],
		'v6-existence-diphasic-derivation-of-r-wave': [],
		'v6-existence-ragged-p-wave': [],
		'v6-existence-diphasic-derivation-of-p-wave': [],
		'v6-existence-ragged-t-wave': [],
		'v6-existence-diphasic-derivation-of-t-wave': [],
		# DI channel new info:
		'di-jj-wave-ampl': [],
		'di-q-wave-ampl': [],
		'di-r-wave-ampl': [],
		'di-s-wave-ampl': [],
		'di-r\'-wave-ampl': [],
		'di-s\'-wave-ampl': [],
		'di-p-wave-ampl': [],
		'di-t-wave-ampl': [],
		'di-qrsa-area': [],
		'di-qrsta-area': [],
		# DII channel new info:
		'dii-jj-wave-ampl': [],
		'dii-q-wave-ampl': [],
		'dii-r-wave-ampl': [],
		'dii-s-wave-ampl': [],
		'dii-r\'-wave-ampl': [],
		'dii-s\'-wave-ampl': [],
		'dii-p-wave-ampl': [],
		'dii-t-wave-ampl': [],
		'dii-qrsa-area': [],
		'dii-qrsta-area': [],
		# DIII channel new info:
		'diii-jj-wave-ampl': [],
		'diii-q-wave-ampl': [],
		'diii-r-wave-ampl': [],
		'diii-s-wave-ampl': [],
		'diii-r\'-wave-ampl': [],
		'diii-s\'-wave-ampl': [],
		'diii-p-wave-ampl': [],
		'diii-t-wave-ampl': [],
		'diii-qrsa-area': [],
		'diii-qrsta-area': [],
		# AVR channel new info:
		'avr-jj-wave-ampl': [],
		'avr-q-wave-ampl': [],
		'avr-r-wave-ampl': [],
		'avr-s-wave-ampl': [],
		'avr-r\'-wave-ampl': [],
		'avr-s\'-wave-ampl': [],
		'avr-p-wave-ampl': [],
		'avr-t-wave-ampl': [],
		'avr-qrsa-area': [],
		'avr-qrsta-area': [],
		# AVL channel new info:
		'avl-jj-wave-ampl': [],
		'avl-q-wave-ampl': [],
		'avl-r-wave-ampl': [],
		'avl-s-wave-ampl': [],
		'avl-r\'-wave-ampl': [],
		'avl-s\'-wave-ampl': [],
		'avl-p-wave-ampl': [],
		'avl-t-wave-ampl': [],
		'avl-qrsa-area': [],
		'avl-qrsta-area': [],
		# AVF channel new info:
		'avf-jj-wave-ampl': [],
		'avf-q-wave-ampl': [],
		'avf-r-wave-ampl': [],
		'avf-s-wave-ampl': [],
		'avf-r\'-wave-ampl': [],
		'avf-s\'-wave-ampl': [],
		'avf-p-wave-ampl': [],
		'avf-t-wave-ampl': [],
		'avf-qrsa-area': [],
		'avf-qrsta-area': [],
		# V1 channel new info:
		'v1-jj-wave-ampl': [],
		'v1-q-wave-ampl': [],
		'v1-r-wave-ampl': [],
		'v1-s-wave-ampl': [],
		'v1-r\'-wave-ampl': [],
		'v1-s\'-wave-ampl': [],
		'v1-p-wave-ampl': [],
		'v1-t-wave-ampl': [],
		'v1-qrsa-area': [],
		'v1-qrsta-area': [],
		# V2 channel new info:
		'v2-jj-wave-ampl': [],
		'v2-q-wave-ampl': [],
		'v2-r-wave-ampl': [],
		'v2-s-wave-ampl': [],
		'v2-r\'-wave-ampl': [],
		'v2-s\'-wave-ampl': [],
		'v2-p-wave-ampl': [],
		'v2-t-wave-ampl': [],
		'v2-qrsa-area': [],
		'v2-qrsta-area': [],
		# V3 channel new info:
		'v3-jj-wave-ampl': [],
		'v3-q-wave-ampl': [],
		'v3-r-wave-ampl': [],
		'v3-s-wave-ampl': [],
		'v3-r\'-wave-ampl': [],
		'v3-s\'-wave-ampl': [],
		'v3-p-wave-ampl': [],
		'v3-t-wave-ampl': [],
		'v3-qrsa-area': [],
		'v3-qrsta-area': [],
		# V4 channel new info:
		'v4-jj-wave-ampl': [],
		'v4-q-wave-ampl': [],
		'v4-r-wave-ampl': [],
		'v4-s-wave-ampl': [],
		'v4-r\'-wave-ampl': [],
		'v4-s\'-wave-ampl': [],
		'v4-p-wave-ampl': [],
		'v4-t-wave-ampl': [],
		'v4-qrsa-area': [],
		'v4-qrsta-area': [],
		# V5 channel new info:
		'v5-jj-wave-ampl': [],
		'v5-q-wave-ampl': [],
		'v5-r-wave-ampl': [],
		'v5-s-wave-ampl': [],
		'v5-r\'-wave-ampl': [],
		'v5-s\'-wave-ampl': [],
		'v5-p-wave-ampl': [],
		'v5-t-wave-ampl': [],
		'v5-qrsa-area': [],
		'v5-qrsta-area': [],
		# V6 channel new info:
		'v6-jj-wave-ampl': [],
		'v6-q-wave-ampl': [],
		'v6-r-wave-ampl': [],
		'v6-s-wave-ampl': [],
		'v6-r\'-wave-ampl': [],
		'v6-s\'-wave-ampl': [],
		'v6-p-wave-ampl': [],
		'v6-t-wave-ampl': [],
		'v6-qrsa-area': [],
		'v6-qrsta-area': [],
	}
	mapping_cols_configs = {
		0: {'column': 'age', 'type': 'int'},
		1: {'column': 'sex', 'type': 'int'},
		2: {'column': 'height', 'type': 'int'},
		3: {'column': 'weight', 'type': 'int'},
		4: {'column': 'qrs-duration', 'type': 'int'},
		5: {'column': 'pq-interval', 'type': 'int'},
		6: {'column': 'qt-interval', 'type': 'int'},
		7: {'column': 't-interval', 'type': 'int'},
		8: {'column': 'p-interval', 'type': 'int'},
		9: {'column': 'qrs', 'type': 'int'},
		10: {'column': 't', 'type': 'int', 'optional': True},
		11: {'column': 'p', 'type': 'int', 'optional': True},
		12: {'column': 'qrst', 'type': 'int', 'optional': True},
		13: {'column': 'j', 'type': 'int', 'optional': True},
		14: {'column': 'heart-rate', 'type': 'int', 'optional': True},
		# DI channel:
		15: {'column': 'di-q-wave', 'type': 'int'},
		16: {'column': 'di-r-wave', 'type': 'int'},
		17: {'column': 'di-s-wave', 'type': 'int'},
		18: {'column': 'di-r\'-wave', 'type': 'int'},
		19: {'column': 'di-s\'-wave', 'type': 'int'},
		20: {'column': 'di-intrinsic-deflections-count', 'type': 'int'},
		21: {'column': 'di-existence-ragged-r-wave', 'type': 'int'},
		22: {'column': 'di-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		23: {'column': 'di-existence-ragged-p-wave', 'type': 'int'},
		24: {'column': 'di-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		25: {'column': 'di-existence-ragged-t-wave', 'type': 'int'},
		26: {'column': 'di-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# DII channel:
		27: {'column': 'dii-q-wave', 'type': 'int'},
		28: {'column': 'dii-r-wave', 'type': 'int'},
		29: {'column': 'dii-s-wave', 'type': 'int'},
		30: {'column': 'dii-r\'-wave', 'type': 'int'},
		31: {'column': 'dii-s\'-wave', 'type': 'int'},
		32: {'column': 'dii-intrinsic-deflections-count', 'type': 'int'},
		33: {'column': 'dii-existence-ragged-r-wave', 'type': 'int'},
		34: {'column': 'dii-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		35: {'column': 'dii-existence-ragged-p-wave', 'type': 'int'},
		36: {'column': 'dii-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		37: {'column': 'dii-existence-ragged-t-wave', 'type': 'int'},
		38: {'column': 'dii-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# DIII channel:
		39: {'column': 'diii-q-wave', 'type': 'int'},
		40: {'column': 'diii-r-wave', 'type': 'int'},
		41: {'column': 'diii-s-wave', 'type': 'int'},
		42: {'column': 'diii-r\'-wave', 'type': 'int'},
		43: {'column': 'diii-s\'-wave', 'type': 'int'},
		44: {'column': 'diii-intrinsic-deflections-count', 'type': 'int'},
		45: {'column': 'diii-existence-ragged-r-wave', 'type': 'int'},
		46: {'column': 'diii-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		47: {'column': 'diii-existence-ragged-p-wave', 'type': 'int'},
		48: {'column': 'diii-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		49: {'column': 'diii-existence-ragged-t-wave', 'type': 'int'},
		50: {'column': 'diii-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# AVR channel:
		51: {'column': 'avr-q-wave', 'type': 'int'},
		52: {'column': 'avr-r-wave', 'type': 'int'},
		53: {'column': 'avr-s-wave', 'type': 'int'},
		54: {'column': 'avr-r\'-wave', 'type': 'int'},
		55: {'column': 'avr-s\'-wave', 'type': 'int'},
		56: {'column': 'avr-intrinsic-deflections-count', 'type': 'int'},
		57: {'column': 'avr-existence-ragged-r-wave', 'type': 'int'},
		58: {'column': 'avr-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		59: {'column': 'avr-existence-ragged-p-wave', 'type': 'int'},
		60: {'column': 'avr-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		61: {'column': 'avr-existence-ragged-t-wave', 'type': 'int'},
		62: {'column': 'avr-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# AVL channel:
		63: {'column': 'avl-q-wave', 'type': 'int'},
		64: {'column': 'avl-r-wave', 'type': 'int'},
		65: {'column': 'avl-s-wave', 'type': 'int'},
		66: {'column': 'avl-r\'-wave', 'type': 'int'},
		67: {'column': 'avl-s\'-wave', 'type': 'int'},
		68: {'column': 'avl-intrinsic-deflections-count', 'type': 'int'},
		69: {'column': 'avl-existence-ragged-r-wave', 'type': 'int'},
		70: {'column': 'avl-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		71: {'column': 'avl-existence-ragged-p-wave', 'type': 'int'},
		72: {'column': 'avl-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		73: {'column': 'avl-existence-ragged-t-wave', 'type': 'int'},
		74: {'column': 'avl-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# AVF channel:
		75: {'column': 'avf-q-wave', 'type': 'int'},
		76: {'column': 'avf-r-wave', 'type': 'int'},
		77: {'column': 'avf-s-wave', 'type': 'int'},
		78: {'column': 'avf-r\'-wave', 'type': 'int'},
		79: {'column': 'avf-s\'-wave', 'type': 'int'},
		80: {'column': 'avf-intrinsic-deflections-count', 'type': 'int'},
		81: {'column': 'avf-existence-ragged-r-wave', 'type': 'int'},
		82: {'column': 'avf-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		83: {'column': 'avf-existence-ragged-p-wave', 'type': 'int'},
		84: {'column': 'avf-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		85: {'column': 'avf-existence-ragged-t-wave', 'type': 'int'},
		86: {'column': 'avf-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V1 channel:
		87: {'column': 'v1-q-wave', 'type': 'int'},
		88: {'column': 'v1-r-wave', 'type': 'int'},
		89: {'column': 'v1-s-wave', 'type': 'int'},
		90: {'column': 'v1-r\'-wave', 'type': 'int'},
		91: {'column': 'v1-s\'-wave', 'type': 'int'},
		92: {'column': 'v1-intrinsic-deflections-count', 'type': 'int'},
		93: {'column': 'v1-existence-ragged-r-wave', 'type': 'int'},
		94: {'column': 'v1-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		95: {'column': 'v1-existence-ragged-p-wave', 'type': 'int'},
		96: {'column': 'v1-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		97: {'column': 'v1-existence-ragged-t-wave', 'type': 'int'},
		98: {'column': 'v1-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V2 channel:
		99: {'column': 'v2-q-wave', 'type': 'int'},
		100: {'column': 'v2-r-wave', 'type': 'int'},
		101: {'column': 'v2-s-wave', 'type': 'int'},
		102: {'column': 'v2-r\'-wave', 'type': 'int'},
		103: {'column': 'v2-s\'-wave', 'type': 'int'},
		104: {'column': 'v2-intrinsic-deflections-count', 'type': 'int'},
		105: {'column': 'v2-existence-ragged-r-wave', 'type': 'int'},
		106: {'column': 'v2-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		107: {'column': 'v2-existence-ragged-p-wave', 'type': 'int'},
		108: {'column': 'v2-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		109: {'column': 'v2-existence-ragged-t-wave', 'type': 'int'},
		110: {'column': 'v2-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V3 channel:
		111: {'column': 'v3-q-wave', 'type': 'int'},
		112: {'column': 'v3-r-wave', 'type': 'int'},
		113: {'column': 'v3-s-wave', 'type': 'int'},
		114: {'column': 'v3-r\'-wave', 'type': 'int'},
		115: {'column': 'v3-s\'-wave', 'type': 'int'},
		116: {'column': 'v3-intrinsic-deflections-count', 'type': 'int'},
		117: {'column': 'v3-existence-ragged-r-wave', 'type': 'int'},
		118: {'column': 'v3-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		119: {'column': 'v3-existence-ragged-p-wave', 'type': 'int'},
		120: {'column': 'v3-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		121: {'column': 'v3-existence-ragged-t-wave', 'type': 'int'},
		122: {'column': 'v3-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V4 channel:
		123: {'column': 'v4-q-wave', 'type': 'int'},
		124: {'column': 'v4-r-wave', 'type': 'int'},
		125: {'column': 'v4-s-wave', 'type': 'int'},
		126: {'column': 'v4-r\'-wave', 'type': 'int'},
		127: {'column': 'v4-s\'-wave', 'type': 'int'},
		128: {'column': 'v4-intrinsic-deflections-count', 'type': 'int'},
		129: {'column': 'v4-existence-ragged-r-wave', 'type': 'int'},
		130: {'column': 'v4-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		131: {'column': 'v4-existence-ragged-p-wave', 'type': 'int'},
		132: {'column': 'v4-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		133: {'column': 'v4-existence-ragged-t-wave', 'type': 'int'},
		134: {'column': 'v4-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V5 channel:
		135: {'column': 'v5-q-wave', 'type': 'int'},
		136: {'column': 'v5-r-wave', 'type': 'int'},
		137: {'column': 'v5-s-wave', 'type': 'int'},
		138: {'column': 'v5-r\'-wave', 'type': 'int'},
		139: {'column': 'v5-s\'-wave', 'type': 'int'},
		140: {'column': 'v5-intrinsic-deflections-count', 'type': 'int'},
		141: {'column': 'v5-existence-ragged-r-wave', 'type': 'int'},
		142: {'column': 'v5-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		143: {'column': 'v5-existence-ragged-p-wave', 'type': 'int'},
		144: {'column': 'v5-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		145: {'column': 'v5-existence-ragged-t-wave', 'type': 'int'},
		146: {'column': 'v5-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# V6 channel:
		147: {'column': 'v6-q-wave', 'type': 'int'},
		148: {'column': 'v6-r-wave', 'type': 'int'},
		149: {'column': 'v6-s-wave', 'type': 'int'},
		150: {'column': 'v6-r\'-wave', 'type': 'int'},
		151: {'column': 'v6-s\'-wave', 'type': 'int'},
		152: {'column': 'v6-intrinsic-deflections-count', 'type': 'int'},
		153: {'column': 'v6-existence-ragged-r-wave', 'type': 'int'},
		154: {'column': 'v6-existence-diphasic-derivation-of-r-wave', 'type': 'int'},
		155: {'column': 'v6-existence-ragged-p-wave', 'type': 'int'},
		156: {'column': 'v6-existence-diphasic-derivation-of-p-wave', 'type': 'int'},
		157: {'column': 'v6-existence-ragged-t-wave', 'type': 'int'},
		158: {'column': 'v6-existence-diphasic-derivation-of-t-wave', 'type': 'int'},
		# DI channel new info:
		159: {'column': 'di-jj-wave-ampl', 'type': 'float'},
		160: {'column': 'di-q-wave-ampl', 'type': 'float'},
		161: {'column': 'di-r-wave-ampl', 'type': 'float'},
		162: {'column': 'di-s-wave-ampl', 'type': 'float'},
		163: {'column': 'di-r\'-wave-ampl', 'type': 'float'},
		164: {'column': 'di-s\'-wave-ampl', 'type': 'float'},
		165: {'column': 'di-p-wave-ampl', 'type': 'float'},
		166: {'column': 'di-t-wave-ampl', 'type': 'float'},
		167: {'column': 'di-qrsa-area', 'type': 'float'},
		168: {'column': 'di-qrsta-area', 'type': 'float'},
		# DII channel new info:
		169: {'column': 'dii-jj-wave-ampl', 'type': 'float'},
		170: {'column': 'dii-q-wave-ampl', 'type': 'float'},
		171: {'column': 'dii-r-wave-ampl', 'type': 'float'},
		172: {'column': 'dii-s-wave-ampl', 'type': 'float'},
		173: {'column': 'dii-r\'-wave-ampl', 'type': 'float'},
		174: {'column': 'dii-s\'-wave-ampl', 'type': 'float'},
		175: {'column': 'dii-p-wave-ampl', 'type': 'float'},
		176: {'column': 'dii-t-wave-ampl', 'type': 'float'},
		177: {'column': 'dii-qrsa-area', 'type': 'float'},
		178: {'column': 'dii-qrsta-area', 'type': 'float'},
		# DIII channel new info:
		179: {'column': 'diii-jj-wave-ampl', 'type': 'float'},
		180: {'column': 'diii-q-wave-ampl', 'type': 'float'},
		181: {'column': 'diii-r-wave-ampl', 'type': 'float'},
		182: {'column': 'diii-s-wave-ampl', 'type': 'float'},
		183: {'column': 'diii-r\'-wave-ampl', 'type': 'float'},
		184: {'column': 'diii-s\'-wave-ampl', 'type': 'float'},
		185: {'column': 'diii-p-wave-ampl', 'type': 'float'},
		186: {'column': 'diii-t-wave-ampl', 'type': 'float'},
		187: {'column': 'diii-qrsa-area', 'type': 'float'},
		188: {'column': 'diii-qrsta-area', 'type': 'float'},
		# AVR channel new info:
		189: {'column': 'avr-jj-wave-ampl', 'type': 'float'},
		190: {'column': 'avr-q-wave-ampl', 'type': 'float'},
		191: {'column': 'avr-r-wave-ampl', 'type': 'float'},
		192: {'column': 'avr-s-wave-ampl', 'type': 'float'},
		193: {'column': 'avr-r\'-wave-ampl', 'type': 'float'},
		194: {'column': 'avr-s\'-wave-ampl', 'type': 'float'},
		195: {'column': 'avr-p-wave-ampl', 'type': 'float'},
		196: {'column': 'avr-t-wave-ampl', 'type': 'float'},
		197: {'column': 'avr-qrsa-area', 'type': 'float'},
		198: {'column': 'avr-qrsta-area', 'type': 'float'},
		# AVL channel new info:
		199: {'column': 'avl-jj-wave-ampl', 'type': 'float'},
		200: {'column': 'avl-q-wave-ampl', 'type': 'float'},
		201: {'column': 'avl-r-wave-ampl', 'type': 'float'},
		202: {'column': 'avl-s-wave-ampl', 'type': 'float'},
		203: {'column': 'avl-r\'-wave-ampl', 'type': 'float'},
		204: {'column': 'avl-s\'-wave-ampl', 'type': 'float'},
		205: {'column': 'avl-p-wave-ampl', 'type': 'float'},
		206: {'column': 'avl-t-wave-ampl', 'type': 'float'},
		207: {'column': 'avl-qrsa-area', 'type': 'float'},
		208: {'column': 'avl-qrsta-area', 'type': 'float'},
		# AVF channel new info:
		209: {'column': 'avf-jj-wave-ampl', 'type': 'float'},
		210: {'column': 'avf-q-wave-ampl', 'type': 'float'},
		211: {'column': 'avf-r-wave-ampl', 'type': 'float'},
		212: {'column': 'avf-s-wave-ampl', 'type': 'float'},
		213: {'column': 'avf-r\'-wave-ampl', 'type': 'float'},
		214: {'column': 'avf-s\'-wave-ampl', 'type': 'float'},
		215: {'column': 'avf-p-wave-ampl', 'type': 'float'},
		216: {'column': 'avf-t-wave-ampl', 'type': 'float'},
		217: {'column': 'avf-qrsa-area', 'type': 'float'},
		218: {'column': 'avf-qrsta-area', 'type': 'float'},
		# V1 channel new info:
		219: {'column': 'v1-jj-wave-ampl', 'type': 'float'},
		220: {'column': 'v1-q-wave-ampl', 'type': 'float'},
		221: {'column': 'v1-r-wave-ampl', 'type': 'float'},
		222: {'column': 'v1-s-wave-ampl', 'type': 'float'},
		223: {'column': 'v1-r\'-wave-ampl', 'type': 'float'},
		224: {'column': 'v1-s\'-wave-ampl', 'type': 'float'},
		225: {'column': 'v1-p-wave-ampl', 'type': 'float'},
		226: {'column': 'v1-t-wave-ampl', 'type': 'float'},
		227: {'column': 'v1-qrsa-area', 'type': 'float'},
		228: {'column': 'v1-qrsta-area', 'type': 'float'},
		# V2 channel new info:
		229: {'column': 'v2-jj-wave-ampl', 'type': 'float'},
		230: {'column': 'v2-q-wave-ampl', 'type': 'float'},
		231: {'column': 'v2-r-wave-ampl', 'type': 'float'},
		232: {'column': 'v2-s-wave-ampl', 'type': 'float'},
		233: {'column': 'v2-r\'-wave-ampl', 'type': 'float'},
		234: {'column': 'v2-s\'-wave-ampl', 'type': 'float'},
		235: {'column': 'v2-p-wave-ampl', 'type': 'float'},
		236: {'column': 'v2-t-wave-ampl', 'type': 'float'},
		237: {'column': 'v2-qrsa-area', 'type': 'float'},
		238: {'column': 'v2-qrsta-area', 'type': 'float'},
		# V3 channel new info:
		239: {'column': 'v3-jj-wave-ampl', 'type': 'float'},
		240: {'column': 'v3-q-wave-ampl', 'type': 'float'},
		241: {'column': 'v3-r-wave-ampl', 'type': 'float'},
		242: {'column': 'v3-s-wave-ampl', 'type': 'float'},
		243: {'column': 'v3-r\'-wave-ampl', 'type': 'float'},
		244: {'column': 'v3-s\'-wave-ampl', 'type': 'float'},
		245: {'column': 'v3-p-wave-ampl', 'type': 'float'},
		246: {'column': 'v3-t-wave-ampl', 'type': 'float'},
		247: {'column': 'v3-qrsa-area', 'type': 'float'},
		248: {'column': 'v3-qrsta-area', 'type': 'float'},
		# V4 channel new info:
		249: {'column': 'v4-jj-wave-ampl', 'type': 'float'},
		250: {'column': 'v4-q-wave-ampl', 'type': 'float'},
		251: {'column': 'v4-r-wave-ampl', 'type': 'float'},
		252: {'column': 'v4-s-wave-ampl', 'type': 'float'},
		253: {'column': 'v4-r\'-wave-ampl', 'type': 'float'},
		254: {'column': 'v4-s\'-wave-ampl', 'type': 'float'},
		255: {'column': 'v4-p-wave-ampl', 'type': 'float'},
		256: {'column': 'v4-t-wave-ampl', 'type': 'float'},
		257: {'column': 'v4-qrsa-area', 'type': 'float'},
		258: {'column': 'v4-qrsta-area', 'type': 'float'},
		# V5 channel new info:
		259: {'column': 'v5-jj-wave-ampl', 'type': 'float'},
		260: {'column': 'v5-q-wave-ampl', 'type': 'float'},
		261: {'column': 'v5-r-wave-ampl', 'type': 'float'},
		262: {'column': 'v5-s-wave-ampl', 'type': 'float'},
		263: {'column': 'v5-r\'-wave-ampl', 'type': 'float'},
		264: {'column': 'v5-s\'-wave-ampl', 'type': 'float'},
		265: {'column': 'v5-p-wave-ampl', 'type': 'float'},
		266: {'column': 'v5-t-wave-ampl', 'type': 'float'},
		267: {'column': 'v5-qrsa-area', 'type': 'float'},
		268: {'column': 'v5-qrsta-area', 'type': 'float'},
		# V6 channel new info:
		269: {'column': 'v6-jj-wave-ampl', 'type': 'float'},
		270: {'column': 'v6-q-wave-ampl', 'type': 'float'},
		271: {'column': 'v6-r-wave-ampl', 'type': 'float'},
		272: {'column': 'v6-s-wave-ampl', 'type': 'float'},
		273: {'column': 'v6-r\'-wave-ampl', 'type': 'float'},
		274: {'column': 'v6-s\'-wave-ampl', 'type': 'float'},
		275: {'column': 'v6-p-wave-ampl', 'type': 'float'},
		276: {'column': 'v6-t-wave-ampl', 'type': 'float'},
		277: {'column': 'v6-qrsa-area', 'type': 'float'},
		278: {'column': 'v6-qrsta-area', 'type': 'float'},
	}
	import sys
	data_lines = get_lines(data_filepath)
	for line in data_lines:
		if skip_records_with_empty_values and '?' in line:
			continue
		parts = line.split(',')
		for i, part in enumerate(parts):
			if i in mapping_cols_configs:
				config = mapping_cols_configs[i]
				config_column = config['column']
				config_type = config['type']
				if config_type == 'int':
					try:
						if '.' in part:
							print(f'WARNING: Column {config_column} should be float', file=sys.stderr)
						part = int(part)
						if str(part) == 'nan':
							pass
					except:
						if 'optional' in config.keys() and config['optional']:
							part = None
						else:
							print(f'ERROR: Int convertion of columns {config_column}', file=sys.stderr)
				elif config_type == 'float':
					try:
						if '.' not in part:
							print(f'WARNING: Column {config_column} should be int', file=sys.stderr)
						part = float(part)
					except:
						if 'optional' in config.keys() and config['optional']:
							part = None
						else:
							print(f'ERROR: Float convertion of columns {config_column}', file=sys.stderr)
				dataset[config_column].append(part)
	return dataset
